package dev.binclub.binscure.processors.exploit

import dev.binclub.binscure.CObfuscator.isExcluded
import dev.binclub.binscure.IClassProcessor
import dev.binclub.binscure.configuration.ConfigurationManager.rootConfig
import org.objectweb.asm.Attribute
import org.objectweb.asm.tree.ClassNode

/**
 * @author cookiedragon234 17/Mar/2020
 */
object BadAttributeExploit: IClassProcessor {
	override fun process(classes: MutableCollection<ClassNode>, passThrough: MutableMap<String, ByteArray>) {
		if (!rootConfig.crasher.enabled)
			return
		
		for (classNode in classes) {
			if (isExcluded(classNode))
				continue
			
			classNode.attrs = (classNode.attrs ?: arrayListOf()).also {
				it.add(DummyAttribute("NestHost"))
				it.add(DummyAttribute("StackMapTable"))
				it.add(DummyAttribute("Exceptions"))
				it.add(DummyAttribute("Module"))
			}
			for (field in classNode.fields) {
				field.attrs = (field.attrs ?: arrayListOf()).also {
					it.add(DummyAttribute("Code"))
					it.add(DummyAttribute("BootstrapMethods"))
					it.add(DummyAttribute("Exceptions"))
				}
			}
		}
	}
	
	private class DummyAttribute(name: String): Attribute(name) {
		init {
			content = ByteArray(0)
		}
	}
}
