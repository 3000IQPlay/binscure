package dev.binclub.binscure.processors.exploit

import dev.binclub.binscure.IClassProcessor
import dev.binclub.binscure.kotlin.add
import dev.binclub.binscure.kotlin.internalName
import dev.binclub.binscure.utils.ldcInt
import dev.binclub.binscure.utils.randomThrowable
import org.objectweb.asm.Label
import org.objectweb.asm.Opcodes.*
import org.objectweb.asm.tree.*

/**
 * @author cookiedragon234 25/Feb/2020
 */
object BadClinit: IClassProcessor {
	override fun process(classes: MutableCollection<ClassNode>, passThrough: MutableMap<String, ByteArray>) {
		classLoop@for (classNode in classes) {
			for (method in classNode.methods) {
				if (method.name == "<clinit>") continue@classLoop
			}
			
			classNode.methods.add(
				MethodNode(
					ACC_STATIC + ACC_PUBLIC,
					"<clinit>",
					"(Ljava/lang/Throwable;)V",
					null,
					null
				).apply {
					instructions = InsnList().apply {
						add(VarInsnNode(ALOAD, 0))
						add(ATHROW)
					}
				}
			)
		}
	}
}
